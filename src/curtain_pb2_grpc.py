# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import curtain_pb2 as curtain__pb2


class CurtainServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.open = channel.unary_unary(
        '/CurtainService/open',
        request_serializer=curtain__pb2.StringRequest.SerializeToString,
        response_deserializer=curtain__pb2.StringResponse.FromString,
        )
    self.close = channel.unary_unary(
        '/CurtainService/close',
        request_serializer=curtain__pb2.StringRequest.SerializeToString,
        response_deserializer=curtain__pb2.StringResponse.FromString,
        )
    self.adjustHeightAndWidth = channel.unary_unary(
        '/CurtainService/adjustHeightAndWidth',
        request_serializer=curtain__pb2.HeightAndWidth.SerializeToString,
        response_deserializer=curtain__pb2.StringResponse.FromString,
        )


class CurtainServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def open(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def close(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def adjustHeightAndWidth(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CurtainServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'open': grpc.unary_unary_rpc_method_handler(
          servicer.open,
          request_deserializer=curtain__pb2.StringRequest.FromString,
          response_serializer=curtain__pb2.StringResponse.SerializeToString,
      ),
      'close': grpc.unary_unary_rpc_method_handler(
          servicer.close,
          request_deserializer=curtain__pb2.StringRequest.FromString,
          response_serializer=curtain__pb2.StringResponse.SerializeToString,
      ),
      'adjustHeightAndWidth': grpc.unary_unary_rpc_method_handler(
          servicer.adjustHeightAndWidth,
          request_deserializer=curtain__pb2.HeightAndWidth.FromString,
          response_serializer=curtain__pb2.StringResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'CurtainService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
